name: Deploy .NET 6 WebAPI

on:
  push:
    branches: [ "deploy" ]
  pull_request:
    branches: [ "deploy" ]

jobs:
  deploy:
    runs-on: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      # Este bloque verifica y clona el repositorio
      # - name: Check if repository exists (WebAPI)
      #   run: |
      #     if (Test-Path -Path "X:\deploy\lybWepApi_graphQL\Presentation\Presentation.csproj") {
      #       Write-Output "Repository already exists, pulling changes..."
      #       cd X:\deploy\lybWepApi_graphQL
      #       & "C:\Program Files\Git\bin\git.exe" pull origin deploy
      #     } else {
      #       Write-Output "Cloning repository..."
      #       & "C:\Program Files\Git\bin\git.exe" clone https://github.com/YourUsername/YourWebAPIProject.git X:\deploy\lybWepApi_graphQL
      #     }
          
      - name: Restore and publish .NET 6 WebAPI
        run: |
          dotnet restore
          dotnet publish -c Release -o ./publish

      # Aquí se verifica y elimina archivos antiguos del public 
      - name: Clean public
        run: |
          if (Test-Path -Path "X:\wwwroot\lybApi\web.config") {
            $filesToDelete = Get-ChildItem -Path X:\wwwroot\lybApi | Where-Object { $_.Name -notin @('web.config', 'logs') }

            $remainingFiles = $filesToDelete

            $maxAttempts = 3
            $attempts = 0

            while ($remainingFiles.Count -gt 0 -and $attempts -lt $maxAttempts) {
              $attempts++

              foreach ($file in $remainingFiles) {
                Remove-Item -Path $file.FullName -Recurse -Force -ErrorAction SilentlyContinue
              }

              $remainingFiles = Get-ChildItem -Path X:\wwwroot\lybApi | Where-Object { $_.Name -notin @('web.config', 'logs') }
            }
            if ($remainingFiles.Count -gt 0) {
              Write-Host "No se pudieron eliminar todos los archivos después de $attempts intentos."
            }
          }else{
            mkdir X:\wwwroot\lybApi
          }
          # if (Test-Path -Path "X:\wwwroot\lybApi\web.config") {
          #   Get-ChildItem -Path X:\wwwroot\lybApi | Where-Object { $_.Name -notin @('web.config','logs') } | ForEach-Object { Remove-Item -Path $_.FullName -Recurse -Force }
          # } else {
          #   mkdir X:\wwwroot\lybApi
          # }

      # - name: Copy Files dist to public
      #   run: |
      #     if (Test-Path -Path "X:\wwwroot\lybApi\web.config"){
      #       Get-ChildItem -Path "publish" | Where-Object { $_.Name -ne "web.config" } | ForEach-Object { Copy-Item -Path $_.FullName -Destination "X:\wwwroot\lybApi" -Recurse -Force }
      #     }else{
      #       Copy-Item -Path "publish\*" -Destination "X:\wwwroot\lybApi" -Recurse -Force
      #     }
          

